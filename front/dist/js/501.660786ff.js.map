{"version":3,"file":"js/501.660786ff.js","mappings":"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CA,4FACA,wIACA,gGACA,oBACA,uBACA,sBAEA,EACA,WACA,YACA,2BAGA,EAEA,UAGA,iBAGA,OAFA,kEAEA,wBACA,WACA,MAEA,6DACA,GAIA,UACA,kCAEA,iBACA,mDAEA,eACA,kDAOA,OAOA,WACA,mBACA,kFAIA,GAHA,eACA,2GAEA,SAEA,4BACA,+JACA,8FACA,QAKA,IACA,kCACA,mJAEA,mGAMA,CAEA,GAGA,YACA,qCACA,wKACA,kEACA,yGACA,kEACA,yGACA,oFACA,kIAKA,gBACA,uCACA,cACA,uBACA,iCACA,4BACA,0BACA,+BACA,4BAGA,uHACA,gCACA,cACA,EAEA,WACA,cACA,EAGA,kBACA,YACA,gCAEA,oCACA,gCACA,4BAGA,iCACA,qDAIA,qBAGA,EAIA,gBACA,sBAEA,oBACA,8BACA,EAIA,UACA,oBACA,EACA,WAEA,gCACA,eACA,uJACA,qCACA,cACA,6BACA,iCACA,4BACA,0BACA,+BACA,4BACA,gCACA,cACA,EAEA,UACA,gCACA,uJACA,oCACA,cACA,uBACA,+BACA,4BAEA,gCACA,iBAGA,EAEA,aACA,SACA,wEAEA,+JACA,uCACA,oBACA,0BACA,qCACA,kCAEA,sCACA,iBAOA,EACA,mBACA,gCAEA,uHACA,gGACA,sCACA,0CACA,oBACA,0BACA,+BACA,4BACA,0BACA,qCACA,iCACA,gCAEA,cAGA,EAEA,cACA,gCACA,mIACA,SACA,wEAGA,+JAEA,wCACA,oBACA,gCACA,+BACA,4BACA,0BACA,qCACA,kCACA,sCACA,cAGA,IC7hB+R,I,iICQ3RC,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIF,EAAeA,EAAiB,QAehC,IAAkBA,EAAW,CAACC,KAAI,UAAM,iBAAa,eAAU,gBAAW,UAAK,eAAW,YAAQ,UAAM,SAAK,YAAQ,M,sGC0ErH,MAAM,GAAN,2BACM,GAAN,wBACM,GAAN,qBACM,GAAN,qBAEA,OAEA,YAEA,iBAEA,YACA,UACA,WACA,aACA,sBACA,sBACA,iBACA,gCACA,cAGA,OACA,OACA,UACA,aACA,YACA,YACA,SACA,QACA,sBACA,2DACA,mCAEA,4CACA,6GACA,QACA,QACA,eACA,WAEA,EAEA,gBACA,sBACA,oCACA,kCACA,2BAEA,GADA,sBACA,aACA,IACA,yBAKA,CAHA,SAEA,cACA,MAEA,iBAEA,EAEA,aACA,8BACA,8BACA,oCACA,qDAEA,qBACA,kDACA,GAaA,YACA,gCACA,8CACA,SACA,eACA,sBACA,mCAIA,EAGA,gBACA,mBACA,GACA,YACA,gBACA,kBACA,qBAaA,kCACA,EAKA,iBACA,gBACA,EAEA,eACA,sDACA,mDAGA,EACA,oBACA,mCAEA,oCACA,EAEA,QACA,6DACA,EACA,oBACA,oEAGA,mCAEA,0CACA,SACA,wCAGA,oBACA,0DAGA,EACA,aAEA,qDACA,sBAEA,EAGA,SACA,uBACA,qFAEA,uBACA,iBACA,yCACA,mCAEA,8BACA,kBACA,+EAEA,QACA,kEACA,2CACA,wDACA,gDACA,sBAEA,iBACA,0BACA,oCACA,mGAIA,EAIA,kBACA,IAGA,4DACA,uCACA,+CAGA,CAFA,MAEA,CAEA,EAEA,YAIA,sCACA,iCACA,uDAGA,oEAIA,cAGA,EACA,aACA,4BACA,EAEA,aACA,0BACA,sBACA,iFACA,kBACA,YACA,EAEA,eACA,6BACA,gFACA,EAEA,UACA,qDACA,EACA,eACA,kBACA,sDACA,gCACA,EACA,aACA,4BACA,EAEA,gBACA,qBACA,IACA,eACA,UACA,0DACA,gCACA,8EACA,EAEA,oBACA,oEAEA,mCACA,0CACA,SACA,wCAGA,oBACA,0DAEA,EAEA,gBACA,mCACA,EAEA,aACA,6BACA,4CACA,EAEA,WACA,sBACA,cACA,gDACA,EAEA,gBACA,iCACA,UACA,uBAEA,sDACA,yBACA,iBAGA,kBACA,+CACA,GAMA,gBACA,mBACA,GCrakR,I,uBCQ9Q,IAAY,OACd,EACArG,EACAoD,GACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QAShC,IAAkB,GAAW,CAACkD,MAAK,SAAK,aAAS,SAAK,6BAAyB,O","sources":["webpack://front/./src/views/Task.vue?6a64","webpack://front/./src/components/visual/GantTask.vue?ab70","webpack://front/src/components/visual/GantTask.vue","webpack://front/./src/components/visual/GantTask.vue?6d72","webpack://front/./src/components/visual/GantTask.vue","webpack://front/src/views/Task.vue","webpack://front/./src/views/Task.vue?b25a","webpack://front/./src/views/Task.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('work-task-ass-project',{attrs:{\"cards\":_vm.$options.name,\"chatview\":_vm.chatview,\"show\":_vm.show,\"title\":'Задача ' + _vm.gettasks.name,\"breadcrumbs\":_vm.breadcrumbs},on:{\"afterLeave\":_vm.afterLeave,\"afterEnter\":_vm.afterEnter,\"createnewWork\":_vm.createnewWork,\"allCard\":_vm.allCard},scopedSlots:_vm._u([{key:\"spisok\",fn:function(){return [_c('left-list',{attrs:{\"level\":2},on:{\"confirmation\":_vm.confirmation,\"rout\":_vm.rout}}),_c('v-row',{staticClass:\"flex-grow-0 \"},[_c('v-col',{staticClass:\"pa-0\"},[_c('v-divider')],1)],1),_c('v-row',{staticClass:\"flex-grow-0 justify-end\"},[_c('v-col',{staticClass:\"flex-grow-0\"},[_c('MyIco',{attrs:{\"size\":\"large\",\"icons\":\"mdi-chart-gantt\"},on:{\"click\":_vm.gantviewer}})],1)],1),_c('v-slide-x-reverse-transition',[_c('v-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.gantview),expression:\"gantview\"}],staticClass:\"gantPosition\"},[_c('gant-task',{ref:\"ganttask\",attrs:{\"startlevel\":'task'},on:{\"saver\":_vm.addTask,\"changegantview\":_vm.changegantview}})],1)],1)]},proxy:true},{key:\"informations\",fn:function(){return [_c('informationorders',{attrs:{\"chat\":_vm.activedCh,\"chatview\":_vm.chatview,\"indx\":0,\"level\":2,\"breadcrumbs\":_vm.breadcrumbs},on:{\"chatviewer\":_vm.chatviewer,\"createtabchat\":_vm.createtabchat,\"changestatus\":_vm.changestatus,\"confirmation\":_vm.confirmation}})]},proxy:true},{key:\"chat\",fn:function(){return [_c('mMessegeListRight',{directives:[{name:\"show\",rawName:\"v-show\",value:(Object.keys(_vm.activedCh).length>0),expression:\"Object.keys(activedCh).length>0\"}],ref:\"mychat\",staticClass:\"box2\",attrs:{\"chatplace\":'rightchat',\"header\":false,\"chat\":_vm.activedCh,\"waiter\":_vm.waiter},on:{\"waiting\":function($event){_vm.waiter=true}}})]},proxy:true},{key:\"filess\",fn:function(){return [_c('filelist',{attrs:{\"files\":_vm.task.task_files,\"level\":2,\"status\":_vm.task.status.id,\"currentid\":_vm.task.id},on:{\"uploadfile\":_vm.uploadfile,\"deletefile\":_vm.deletefile,\"VisSwitcher\":_vm.VisSwitcher}})]},proxy:true},{key:\"graphic\",fn:function(){return [_c('work-pie-chart',{attrs:{\"title\":'Статусы работ в задаче',\"data\":_vm.task_statuses_calc}})]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"gant\"}},[_c('div',{},[_c('DxGantt',{ref:_vm.ganttRef,attrs:{\"start-date-range\":_vm.startDateRange,\"end-date-range\":_vm.endDateRange,\"first-day-of-week\":1,\"task-list-width\":150,\"height\":350,\"scale-type\":_vm.scale,\"task-content-template\":'taskContentTemplate',\"task-tooltip-content-template\":'TooltipContentTemplate',\"on-custom-command\":_vm.onCustomCommandClick,\"on-context-menu-preparing\":_vm.onContextMenuPreparing},on:{\"task-dbl-click\":_vm.onTaskDblClick},scopedSlots:_vm._u([{key:\"TooltipContentTemplate\",fn:function(ref){\nvar taskk = ref.data;\nreturn [_c('div',{staticClass:\"custom-task-edit-tooltip pa-2\"},[_c('div',{staticClass:\"custom-tooltip-title\"},[_vm._v(\"\\\"\"+_vm._s(taskk.title)+\"\\\"\")]),_c('div',[_vm._v(\" Дата начала: \"+_vm._s(taskk.start.toLocaleDateString())+\" \")]),_c('div',[_vm._v(\"Дата окончания: \"+_vm._s(taskk.end.toLocaleDateString()))])])]}},{key:\"taskContentTemplate\",fn:function(ref){\nvar item = ref.data;\nreturn [_c('div',{staticClass:\"custom-task\",class:_vm.getTaskColor(item.taskData.id),style:({width: item.taskSize.width + 'px'})},[_c('div',{staticClass:\"custom-task-wrapper\"},[_c('div',{staticClass:\"custom-task-row\"},[_vm._v(\" \"+_vm._s(item.taskData.title)+\" -- \"+_vm._s((item && 'taskResources' in item && item.taskResources.length)? item.taskResources[0].text:''))])])])]}}])},[_c('DxContextMenu',{attrs:{\"items\":_vm.contextMenuItems}}),_c('DxScaleTypeRange',{attrs:{\"min\":\"days\",\"max\":\"years\"}}),_c('DxToolbar',[_c('DxItem',{scopedSlots:_vm._u([{key:\"default\",fn:function(){return [_c('v-btn',{staticClass:\"mx-auto px-auto pl-1\",attrs:{\"icon\":\"\",\"x-small\":\"\",\"color\":\"btns\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.$emit('changegantview')}}},[_c('v-icon',{attrs:{\"color\":\"primary\"}},[_vm._v(\"mdi-close\")])],1)]},proxy:true}])}),_c('DxItem',{attrs:{\"name\":\"undo\"}}),_c('DxItem',{attrs:{\"name\":\"redo\"}}),_c('DxItem',{attrs:{\"name\":\"separator\"}}),_c('DxItem',{attrs:{\"name\":\"collapseAll\"}}),_c('DxItem',{attrs:{\"name\":\"expandAll\"}}),_c('DxItem',{attrs:{\"name\":\"separator\"}}),_c('DxItem',{attrs:{\"name\":\"zoomIn\"}}),_c('DxItem',{attrs:{\"name\":\"zoomOut\"}}),_c('DxItem',{attrs:{\"name\":\"fullScreen\"}}),_c('DxItem',{attrs:{\"name\":\"separator\"}}),_c('DxItem',{scopedSlots:_vm._u([{key:\"default\",fn:function(){return [_c('v-btn',{staticClass:\"inyand--text\",attrs:{\"x-small\":\"\",\"color\":\"btns\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.createnewTask.apply(null, arguments)}}},[_vm._v(\" Создать работу\")])]},proxy:true}])})],1),_c('DxTasks',{attrs:{\"data-source\":_vm.tasks}}),_c('DxResources',{attrs:{\"data-source\":_vm.resources}}),_c('DxResourceAssignments',{attrs:{\"data-source\":_vm.resourceAssignments}}),_c('DxEditing',{attrs:{\"enabled\":false}}),_vm._v(\" :allow-resource-adding = false :allow-resource-deleting = false \"),_c('DxColumn',{attrs:{\"data-field\":\"title\",\"caption\":\"\",\"width\":1}})],1)],1),_c('v-dialog',{attrs:{\"overlay-opacity\":\".1\",\"max-width\":\"700px\"},model:{value:(_vm.dialog),callback:function ($$v) {_vm.dialog=$$v},expression:\"dialog\"}},[_c('DialogNewAssigment',{attrs:{\"text\":_vm.actionmethod.text,\"height\":350},scopedSlots:_vm._u([{key:\"textarea\",fn:function(){return [_c('add-assigment',{attrs:{\"actionmethod\":_vm.actionmethod,\"resources\":_vm.resources,\"dialoginfo\":_vm.dialoginfo},on:{\"changeddialog\":_vm.changeddialog}})]},proxy:true},{key:\"btn1\",fn:function(){return [_c('BtnsOut',{attrs:{\"title\":\"Отмена\"},on:{\"click\":function($event){_vm.dialog=false}}})]},proxy:true},{key:\"btn2\",fn:function(){return [_c('BtnsOut',{attrs:{\"title\":\"Сохранить\"},on:{\"click\":_vm.saveit}})]},proxy:true}])})],1),_c('v-dialog',{attrs:{\"overlay-opacity\":\".1\",\"max-width\":\"600px\"},model:{value:(_vm.deldialog),callback:function ($$v) {_vm.deldialog=$$v},expression:\"deldialog\"}},[_c('v-card',[_c('v-card-title',[_c('span',{staticClass:\"text-h5\"},[_vm._v(_vm._s(_vm.actionmethod.text))])]),_c('v-card-text',[_c('v-container',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[_vm._v(\" Вы уверены что хотите удалить \\\"\"+_vm._s(_vm.dialoginfo.name)+\"\\\"? Также будут удалены все связанные объекты \")])],1)],1)],1),_c('v-card-actions',[_c('v-spacer'),_c('BtnsOut',{attrs:{\"title\":\"Отмена\"},on:{\"click\":function($event){_vm.deldialog=false}}}),_c('BtnsOut',{attrs:{\"title\":\"Подтвердить\"},on:{\"click\":_vm.saveit}})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"gant\">\r\n    <!--   <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn3.devexpress.com/jslib/22.2.3/css/dx.dark.compact.css\" /> -->\r\n    <!-- <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn3.devexpress.com/jslib/22.2.3/css/dx-gantt.css\" /> -->\r\n\r\n    <div class=\"\" >\r\n \r\n      <DxGantt\r\n        :start-date-range=\"startDateRange\"\r\n        :end-date-range=\"endDateRange\"\r\n        :first-day-of-week=\"1\"\r\n        :task-list-width=\"150\"\r\n        :height=\"350\"\r\n        :scale-type=\"scale\"\r\n        :task-content-template=\"'taskContentTemplate'\"\r\n        :task-tooltip-content-template=\"'TooltipContentTemplate'\"\r\n        :ref=\"ganttRef\"\r\n        :on-custom-command=\"onCustomCommandClick\"\r\n        :on-context-menu-preparing=\"onContextMenuPreparing\"\r\n        @task-dbl-click=\"onTaskDblClick\"\r\n      >\r\n       <!--   -->\r\n       <DxContextMenu\r\n          :items=\"contextMenuItems\"\r\n        />\r\n           <DxScaleTypeRange\r\n            min=\"days\"\r\n            max=\"years\"\r\n        />\r\n\r\n\r\n\r\n     <DxToolbar>\r\n           <DxItem>\r\n            <template #default>   \r\n        <v-btn   \r\n        icon\r\n        class=\"mx-auto px-auto pl-1\"\r\n         @click.stop=\"$emit('changegantview')\"    \r\n                x-small\r\n               \r\n                color=\"btns\"\r\n                ><v-icon\r\n                color=\"primary\"\r\n                >mdi-close</v-icon>\r\n                </v-btn>\r\n        </template>\r\n            </DxItem>  \r\n\r\n\r\n\r\n        <DxItem name=\"undo\"/>\r\n        <DxItem name=\"redo\"/>\r\n        <DxItem name=\"separator\"/>\r\n        <DxItem name=\"collapseAll\"/>\r\n        <DxItem name=\"expandAll\"/>\r\n        <DxItem name=\"separator\"/>\r\n      \r\n        <DxItem name=\"zoomIn\"/>\r\n        <DxItem name=\"zoomOut\"/>\r\n         <DxItem name=\"fullScreen\"/>\r\n        <DxItem name=\"separator\"/>\r\n        <DxItem>\r\n            <template #default>       \r\n         \r\n        <v-btn      \r\n         @click.stop=\"createnewTask\"    \r\n                x-small\r\n                class=\"inyand--text\"\r\n                color=\"btns\"\r\n                >\r\n                Создать работу</v-btn>\r\n      \r\n                \r\n \r\n                   \r\n            </template>\r\n                    </DxItem>\r\n\r\n      </DxToolbar>\r\n\r\n        <DxTasks :data-source=\"tasks\"/>\r\n     \r\n        <DxResources     \r\n        :data-source=\"resources\"/>\r\n\r\n        <DxResourceAssignments \r\n        \r\n        \r\n        :data-source=\"resourceAssignments\"/>\r\n\r\n        <DxEditing :enabled=\"false\"\r\n           \r\n        />\r\n         :allow-resource-adding = false\r\n        :allow-resource-deleting = false    \r\n\r\n       <DxColumn\r\n         \r\n          data-field=\"title\"\r\n          caption=\"\"\r\n           :width=\"1\"\r\n        />\r\n\r\n\r\n       <template #TooltipContentTemplate=\"{ data: taskk }\">\r\n            <div class=\"custom-task-edit-tooltip pa-2\">\r\n                <div class=\"custom-tooltip-title\">\"{{ taskk.title }}\"</div>\r\n            <div>\r\n                Дата начала: {{taskk.start.toLocaleDateString()}}\r\n            </div>\r\n            <div>Дата окончания: {{taskk.end.toLocaleDateString()}}</div>\r\n            </div>\r\n        </template>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        <template #taskContentTemplate=\"{ data: item }\">\r\n           \r\n          <div\r\n            class=\"custom-task\"\r\n            :class=\"getTaskColor(item.taskData.id)\"\r\n            :style=\"{width: item.taskSize.width + 'px'}\"\r\n          >\r\n\r\n            <div class=\"custom-task-wrapper\">\r\n\r\n            \r\n              <div class=\"custom-task-row\">   {{ item.taskData.title }} -- \r\n                 {{(item && 'taskResources' in item && item.taskResources.length)? item.taskResources[0].text:'' }}</div>\r\n            </div>\r\n   \r\n          </div>\r\n        </template>\r\n      </DxGantt>\r\n    </div>\r\n\r\n\r\n\r\n  <v-dialog\r\n      overlay-opacity= \".1\"\r\n      v-model=\"dialog\"\r\n      \r\n      max-width=\"700px\"\r\n    >\r\n         <DialogNewAssigment\r\n        :text=\"actionmethod.text\"\r\n        :height= 350\r\n      >\r\n        <template #textarea>\r\n          <add-assigment\r\n            :actionmethod=\"actionmethod\"       \r\n            :resources=\"resources\"\r\n            :dialoginfo=\"dialoginfo\" \r\n            @changeddialog=\"changeddialog\"    \r\n          />\r\n        </template>\r\n        <template #btn1>\r\n          <BtnsOut\r\n            title=\"Отмена\"\r\n            @click=\"dialog=false\"\r\n          />\r\n        </template>\r\n        <template #btn2>\r\n          <BtnsOut\r\n            title=\"Сохранить\"\r\n            @click=\"saveit\"\r\n          />\r\n        </template>\r\n      </DialogNewAssigment>\r\n     \r\n    </v-dialog>\r\n\r\n\r\n<v-dialog\r\n      overlay-opacity= \".1\"\r\n      v-model=\"deldialog\"\r\n      \r\n      max-width=\"600px\"\r\n    >\r\n   \r\n      <v-card>\r\n        <v-card-title>\r\n          <span class=\"text-h5\">{{actionmethod.text}}</span>\r\n        </v-card-title>\r\n        <v-card-text>\r\n          <v-container>\r\n            <v-row>\r\n              <v-col\r\n                cols=\"12\"\r\n                \r\n              >\r\n              Вы уверены что хотите удалить \"{{dialoginfo.name}}\"?\r\n              Также будут удалены все связанные объекты\r\n       \r\n              </v-col>\r\n            \r\n         \r\n            </v-row>\r\n          </v-container>\r\n        \r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <BtnsOut\r\n          title=\"Отмена\"\r\n          @click=\"deldialog=false\"\r\n          />\r\n          <BtnsOut\r\n          title=\"Подтвердить\"\r\n          @click=\"saveit\"\r\n          />\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  </div> \r\n</template>\r\n\r\n<script>\r\n// import 'devexpress-gantt/dist/dx-gantt.css';\r\n\r\n// import 'devextreme/dist/css/dx.light.css';\r\nconst ganttRef = 'gantt'\r\n\r\nimport Datepiker from '@/components/UI/Datepiker.vue'\r\nimport gantff from '@/utils/gant.js'\r\nimport { createNamespacedHelpers } from \"vuex\";\r\nconst projectstate = createNamespacedHelpers(\"projectstate\");\r\nconst taskstate = createNamespacedHelpers(\"taskstate\");\r\nconst workstate = createNamespacedHelpers(\"workstate\");\r\nconst assignmentstate = createNamespacedHelpers(\"assignmentstate\");\r\nimport deMessages from \"devextreme/localization/messages/ru.json\";\r\nimport { locale, loadMessages } from \"devextreme/localization\"\r\nconst globalstore = createNamespacedHelpers(\"globalstore\");\r\nimport addAssigment from '@/components/dialog/fill/add-assigment.vue'\r\n\r\nimport {\r\nDxToolbar,\r\n  DxScaleTypeRange, \r\n  DxItem,\r\n  DxGantt,\r\n  DxTasks,\r\n  DxDependencies,\r\n  DxResources,\r\n  DxResourceAssignments,\r\n  DxColumn,\r\n  DxEditing,\r\n  DxContextMenu,\r\n} from 'devextreme-vue/gantt';\r\n\r\nexport default {\r\n  components: {\r\n    DxScaleTypeRange, \r\n    Datepiker,\r\n    DxContextMenu,\r\n    DxGantt,\r\n    DxTasks,\r\n    DxDependencies,\r\n    DxResources,\r\n    DxResourceAssignments,\r\n    DxColumn,\r\n    DxEditing,\r\n    DxToolbar,\r\n    DxItem,\r\n    addAssigment\r\n  },\r\n  mixins:[gantff],\r\n  data() {\r\n    return {\r\n      dialoginfo:{},\r\n      scale:\"year\",\r\n      selectedkey:\"\",\r\n      ganttRef,\r\n      actionmethod:{method:\"addTask\", text:\"Создание работы\",dateendstore:\"\",datestartstore:\"\",min:\"\",max:\"\", level:\"task\"},\r\n      dialog:false,\r\n      deldialog:false,\r\n      tasks:[],\r\n      task:[ { name: 'edittask', text: 'Редактировать задачу' },{ name: 'addwork', text: 'Создать Работу' }, ],\r\n      work:[ { name: 'editwork', text: 'Редактировать работу' }, { name: 'createAssignment', text: 'Создать поручение' }, {name: 'delwork', text: 'Удалить'} ],\r\n      asgmnt:[{ name: 'editasygmnt', text: 'Редактировать поручение' },  {name: 'delasygmnt', text: 'Удалить'}],\r\n      contextMenuItems: [],\r\n      resourceAssignments:[],\r\n      disableContextMenu: false,\r\n    };\r\n  },\r\n  created(){\r\n        loadMessages(deMessages);\r\n        locale(navigator.language);\r\n         \r\n         \r\n  },\r\n  \r\n  computed:{\r\n\r\n\r\n    gantt: function() {\r\n      this.scale  = this.date_watch(this.startDateRange, this.endDateRange)     \r\n      \r\n      return this.$refs[ganttRef].instance;},\r\n    resources:{\r\n        get(){\r\n          \r\n            return this.getprojectuniqueusers().filter(e=>e.role.id!=6)        \r\n        }\r\n    },\r\n    \r\n  //  rpchange(){return this.getProjectrp()},\r\n   tasksOR(){     \r\n    return  this.gettasks().task_work},\r\n\r\n     startDateRange(){\r\n        return this.tasks[0]? this.tasks[0].start:new Date()},\r\n     \r\n    endDateRange(){\r\n        return this.tasks[0]? this.tasks[0].end:new Date()}\r\n \r\n        ,\r\n    \r\n\r\n  },\r\n\r\n  watch:{\r\n    // rpchange(){ \r\n    //  let parent =  this.topline()   \r\n    //  this.tasks[0]=parent\r\n    //  this.resourceAssignments[0]={id:-1, taskId:`${parent.id}`, resourceId: parent.rp }\r\n    //  this.gantt.refresh(); \r\n    // },\r\n    tasksOR(val){  \r\n      console.log(\"WTF\");\r\n        let parent =  this.topline(this.gettasks(),this.getTaskdatestart(),this.getTaskdateend())   \r\n        this.tasks=[parent]        \r\n        this.resourceAssignments=[{id:-1, taskId:`parent-${this.gettasks().id}`, resourceId: this.getProjectrp().id }]\r\n        // console.log(val);\r\n        if (val.length){        \r\n          \r\n            for (let i=0;i<val.length;i++){\r\n                this.tasks.push({id:`work-${val[i].id}`, title:val[i].name, parentId:this.tasks[0].id, start:new Date(val[i].datestart),end:new Date(val[i].dateend), status:val[i].status})\r\n                this.resourceAssignments.push({id:i, taskId:`work-${val[i].id}`, resourceId: val[i].responsible.id })\r\n                  let indx = 0\r\n      \r\n                  // val[i].work_assignment.forEach(e=>\r\n                  // {this.tasks.push({id:`work-${e.id}`, title:e.name, parentId:`task-${val[i].id}`, start:new Date(e.datestart),end:new Date(e.dateend), status:e.status})\r\n                  // this.resourceAssignments.push({id:(i+e.id+indx+7000000), taskId:`work-${e.id}`, resourceId: e.responsible.id })\r\n                  indx++\r\n                  val[i].work_assignment.forEach(el=>{\r\n                    this.tasks.push({id:`asgmnt-${el.id}`, title:el.name,  parentId:`work-${val[i].id}`, start:new Date(el.datestart),end:new Date(el.dateend), status:el.status})\r\n                  \r\n                    this.resourceAssignments.push({id:(el.id+70000000), taskId:`asgmnt-${el.id}`, resourceId: el.responsible.id })\r\n                  })\r\n                  // }\r\n                //  )\r\n                 \r\n                \r\n           }               \r\n        }      \r\n    }\r\n  },\r\n  \r\n  methods: {\r\n    ...globalstore.mapMutations(['set_assign_id']),\r\n     ...projectstate.mapGetters([\"getprojectuniqueusers\",'getprojectTasks','getprojectWorks','getProjectdatestart','getProjectdateend','getprojectIdName','getProjectrp','getProject']),\r\n     ...taskstate.mapGetters([\"getTaskdatestart\",\"getTaskdateend\",\"gettasks\"]),\r\n     ...taskstate.mapMutations([\"setTaskdateend\",\"setTaskdatestart\",'settasks','settasksresponsible','settasksname']),\r\n     ...workstate.mapGetters([\"getWorkdatestart\",\"getWorkdateend\",\"getworks\"]),\r\n     ...workstate.mapMutations([\"setWorkdateend\",\"setWorkdatestart\",'setWorks','setworksresponsible','setworksname']),\r\n    ...assignmentstate.mapGetters(['getAssignments','getAssignmentdatestart','getAssignmentdateend']),\r\n    ...assignmentstate.mapMutations(['setAssignments','setAssignmentname','setAssignmentdateend','setAssignmentdatestart','setAssignmentresponsible']),\r\n\r\n   \r\n\r\n\r\n   createnewTask(){\r\n    this.actionmethod={method:\"creatework\", \r\n                      level:\"works\",\r\n                      text:\"Создание работы\",\r\n                      responsible_text:\"Ответственный\",\r\n                      min:this.getTaskdatestart(), \r\n                      max:this.getTaskdateend(),\r\n                      datestartstore:'Workdatestart',\r\n                      dateendstore:'Workdateend'}\r\n\r\n \r\n    this.setWorks({name:\"\", parent:Number(this.tasks[0].id.split(\"-\")[1]),datestart:\"\",dateend:\"\", responsible:\"\",status:1})\r\n    this.dialoginfo = this.getworks()\r\n    this.dialog = true\r\n   },\r\n\r\n    console(val){\r\n        console.log(val)\r\n    },\r\n\r\n\r\n    onTaskDblClick(e){\r\n         e.cancel = true;    \r\n         let url = this.$route.path+'/work/'\r\n        \r\n         if(e.data.id.split(\"-\")[0]!='parent'){\r\n            if (e.data.id.split(\"-\")[0]=='work'){\r\n              url+=e.data.id.split(\"-\")[1]\r\n            }\r\n            else {\r\n               url+=e.data.parentId.split(\"-\")[1]\r\n              this.set_assign_id(Number(e.data.id.split(\"-\")[1]))\r\n             }\r\n\r\n\r\n          this.$router.push(url)\r\n         }\r\n     \r\n    },\r\n   \r\n\r\n    \r\n    getTaskColor(taskId) {\r\n        let id = taskId.split(\"-\")[1]\r\n     \r\n      const color = Number(id) % 6;\r\n      return `custom-task-color-${color}`;\r\n    },\r\n\r\n\r\n\r\n    addwork(){\r\n      this.createnewTask()\r\n    },\r\n    editwork(){   \r\n\r\n       let w = this.gettasks().task_work\r\n      console.log(w);\r\n      this.setWorks(w[w.findIndex(e=>e.id==this.selectedkey.id.split(\"-\")[1] && this.selectedkey.title==e.name && this.selectedkey.id.split(\"-\")[0]=='work')])\r\n      this.actionmethod={method:\"editwork\", \r\n                          level:\"works\", \r\n                          text:\"Редактирование работы\",\r\n                          responsible_text:\"Ответственный\",\r\n                        min:this.getTaskdatestart(), \r\n                        max:this.getTaskdateend(),\r\n                        datestartstore:'Workdatestart',\r\n                        dateendstore:'Workdateend'}\r\n      this.dialoginfo = this.getworks()\r\n      this.dialog=true\r\n    },\r\n \r\n    delwork(){\r\n      let w = this.gettasks().task_work\r\n      this.setWorks(w[w.findIndex(e=>e.id==this.selectedkey.id.split(\"-\")[1] && this.selectedkey.title==e.name && this.selectedkey.id.split(\"-\")[0]=='work')])\r\n      this.actionmethod={method:\"delwork\", \r\n                             level:'works',\r\n                            text:\"Удаление работы\",\r\n                            datestartstore:'Workdatestart',\r\n                            dateendstore:'Workdateend'}\r\n                            \r\n      this.dialoginfo = this.getworks()         \r\n      this.deldialog=true\r\n    \r\n       \r\n    },\r\n\r\n   delasygmnt(){\r\n    let w=[]\r\n    this.gettasks().task_work.forEach(e=>{w=w.concat(e.work_assignment)})\r\n \r\n    this.setAssignments(w[w.findIndex(e=>e.id==this.selectedkey.id.split(\"-\")[1] && this.selectedkey.title==e.name && this.selectedkey.id.split(\"-\")[0]=='asgmnt')])\r\n    this.actionmethod={method:\"delasygmnt\", \r\n                             level:'Assignments',\r\n                            text:\"Удаление поручения\",\r\n                            datestartstore:'Assignmentdatestart',\r\n                            dateendstore:'Assignmentdateend'}\r\n                            \r\n       this.dialoginfo = this.getAssignments()          \r\n      this.deldialog=true\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  },\r\n  createAssignment(){\r\n      let wo = this.gettasks().task_work\r\n\r\n      this.setWorks(wo[wo.findIndex(e=>e.id==this.selectedkey.id.split(\"-\")[1] && this.selectedkey.id.split(\"-\")[0]=='work')])\r\n      this.setAssignments({name:\"\",parent:this.getworks().id, responsible:{},datestart:\"\",dateend:\"\"})\r\n      this.dialoginfo = this.getAssignments()\r\n      this.actionmethod={method:\"createasygmnt\", \r\n                          level:\"Assignments\", \r\n                          text:\"Создание поручения\",\r\n                          responsible_text:\"Исполнитель\",\r\n                        min:this.getWorkdatestart(), \r\n                        max:this.getWorkdateend(),\r\n                        datestartstore:'Assignmentdatestart',\r\n                        dateendstore:'Assignmentdateend',\r\n                        responsible_text:\"Исполнитель\"}\r\n      \r\n      this.dialog=true\r\n      \r\n\r\n  },\r\n\r\n  editasygmnt(){\r\n  let wo = this.gettasks().task_work\r\n  this.setWorks(wo[wo.findIndex(e=>e.id==this.selectedkey.parentId.split(\"-\")[1] && this.selectedkey.parentId.split(\"-\")[0]=='work')])\r\n  let w=[]\r\n   this.gettasks().task_work.forEach(e=>{w=w.concat(e.work_assignment)})\r\n   \r\n\r\n      this.setAssignments(w[w.findIndex(e=>e.id==this.selectedkey.id.split(\"-\")[1] && this.selectedkey.title==e.name && this.selectedkey.id.split(\"-\")[0]=='asgmnt')])\r\n    \r\n      this.actionmethod={method:\"editasygmnt\", \r\n                          level:\"Assignments\", \r\n                          text:\"Редактирование поручения\",\r\n                          responsible_text:\"Исполнитель\",\r\n                        min:this.getWorkdatestart(), \r\n                        max:this.getWorkdateend(),\r\n                        datestartstore:'Assignmentdatestart',\r\n                        dateendstore:'Assignmentdateend'}\r\n      this.dialoginfo = this.getAssignments()\r\n      this.dialog=true\r\n\r\n\r\n  },\r\n\r\n    // edittask(){\r\n    //   let t = [this.getProject().task]\r\n      \r\n    //   this.settasks(t[t.findIndex(e=>e.id==this.selectedkey.id.split(\"-\")[1] && this.selectedkey.title==e.name && this.selectedkey.id.split(\"-\")[0]=='task')])\r\n    //    this.actionmethod={\r\n    //                   method:\"updatetask\", \r\n    //                   level:'tasks',\r\n    //                   text:\"Редактирование задачи\",\r\n    //                   min:this.getProjectdatestart(), \r\n    //                   max:this.getProjectdateend(),\r\n    //                   datestartstore:'Taskdatestart',\r\n    //                   dateendstore:'Taskdateend'}\r\n      \r\n    \r\n      \r\n    //   this.dialog=true\r\n\r\n    // }\r\n   \r\n  },\r\n};\r\n</script>\r\n<style>\r\n @import './gant.css';\r\n @import './lightgant.css';\r\n/* #gantt {\r\n  height: 700px;\r\n} */\r\n\r\n.custom-task-color-0 {\r\n  background-color: #5c57c9;\r\n}\r\n\r\n.custom-task-color-1 {\r\n  background-color: #35b86b;\r\n}\r\n\r\n.custom-task-color-2 {\r\n  background-color: #4796ce;\r\n}\r\n\r\n.custom-task-color-3 {\r\n  background-color: #ce4776;\r\n}\r\n\r\n.custom-task-color-4 {\r\n  background-color: #ce5b47;\r\n}\r\n\r\n.custom-task-color-5 {\r\n  background-color: #f78119;\r\n}\r\n\r\n.custom-task-color-6 {\r\n  background-color: #9f47ce;\r\n}\r\n\r\n.custom-task {\r\n  max-height: 48px;\r\n  height: 100%;\r\n  display: block;\r\n  overflow: hidden;\r\n}\r\n\r\n.custom-task-wrapper {\r\n  padding: 4px;\r\n  color: #fff;\r\n}\r\n\r\n.custom-task-wrapper > * {\r\n  display: block;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.custom-task-img-wrapper {\r\n  float: left;\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  margin: 8px;\r\n  background-color: #fff;\r\n  overflow: hidden;\r\n}\r\n\r\n.custom-task-img {\r\n  width: 32px;\r\n}\r\n\r\n.custom-task-title {\r\n  font-weight: 600;\r\n  font-size: 13px;\r\n}\r\n\r\n.custom-task-row {\r\n  font-size: .7rem;\r\n}\r\n\r\n.custom-task-progress {\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 0%;\r\n  height: 4px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n}\r\n \r\n.dx-gantt .dx-row {\r\n  height: 2rem;\r\n} \r\n.dx-splitter-wrapper{\r\n    z-index: 8;\r\n}\r\n.dx-gantt-taskWrapper{\r\n     z-index: 7;\r\n}\r\n\r\n.custom-task-edit-tooltip{\r\n  background: rgba(17, 17, 17, 0.707);\r\n  color: white;\r\n}\r\n\r\n\r\n.h_dna {\r\n  height: 220px;\r\n}\r\n\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GantTask.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GantTask.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GantTask.vue?vue&type=template&id=004dc570&\"\nimport script from \"./GantTask.vue?vue&type=script&lang=js&\"\nexport * from \"./GantTask.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GantTask.vue?vue&type=style&index=0&id=004dc570&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardText,VCardTitle,VCol,VContainer,VDialog,VIcon,VRow,VSpacer})\n","<template>\r\n  <work-task-ass-project\r\n    \r\n    :cards=\"$options.name\"\r\n    :chatview=\"chatview\"\r\n    :show=\"show\"\r\n    @afterLeave=\"afterLeave\"\r\n    @afterEnter=\"afterEnter\"\r\n    @createnewWork=\"createnewWork\"\r\n    @allCard=\"allCard\"\r\n    :title=\"'Задача ' + gettasks.name\"\r\n    :breadcrumbs=\"breadcrumbs\"\r\n  >\r\n    <template #spisok>\r\n\r\n\r\n      <left-list\r\n        :level=\"2\" \r\n        \r\n        @confirmation=\"confirmation\"\r\n        @rout=\"rout\"\r\n      />\r\n      <v-row class=\"flex-grow-0 \">\r\n        <v-col class=\"pa-0\">\r\n          <v-divider></v-divider>\r\n        </v-col>\r\n      </v-row>\r\n      <v-row class=\"flex-grow-0 justify-end\">\r\n        <v-col class=\"flex-grow-0\">\r\n            <MyIco\r\n            @click=\"gantviewer\"\r\n            size=\"large\"\r\n            icons = 'mdi-chart-gantt'\r\n          />  \r\n        </v-col>\r\n      </v-row>\r\n      <v-slide-x-reverse-transition>\r\n        <v-card\r\n          v-show=\"gantview\"\r\n          class=\"gantPosition\"\r\n        >        \r\n          <gant-task\r\n            :startlevel=\"'task'\"\r\n            ref=\"ganttask\"\r\n            @saver = \"addTask\"  \r\n            @changegantview=\"changegantview\"    \r\n          />\r\n        </v-card>\r\n      </v-slide-x-reverse-transition> \r\n    </template>\r\n    <template #informations>\r\n      <informationorders\r\n        :chat=\"activedCh\"\r\n        :chatview=\"chatview\"      \r\n        :indx=\"0\"\r\n        :level=\"2\"      \r\n        @chatviewer=\"chatviewer\" \r\n        @createtabchat=\"createtabchat\"\r\n        @changestatus=\"changestatus\"\r\n        @confirmation=\"confirmation\"\r\n        :breadcrumbs=\"breadcrumbs\"\r\n      />  \r\n    </template>\r\n    <template #chat>\r\n      <mMessegeListRight\r\n        class=\"box2\" v-show=\"Object.keys(activedCh).length>0\"\r\n        ref=\"mychat\"\r\n        :chatplace=\"'rightchat'\"\r\n        :header= false\r\n        :chat=\"activedCh\"\r\n        :waiter=\"waiter\"\r\n        @waiting=\"waiter=true\"\r\n      />  \r\n    </template>\r\n    <template #filess>\r\n      <filelist\r\n        :files=\"task.task_files\"\r\n        :level=\"2\"\r\n        :status=\"task.status.id\"\r\n        :currentid=\"task.id\"\r\n        @uploadfile=\"uploadfile\"\r\n        @deletefile=\"deletefile\"\r\n        @VisSwitcher=\"VisSwitcher\"\r\n      />                \r\n    </template>\r\n    <template #graphic>\r\n      <work-pie-chart\r\n        :title=\"'Статусы работ в задаче'\"\r\n        :data=\"task_statuses_calc\"\r\n      />\r\n    </template>   \r\n  </work-task-ass-project>\r\n</template>\r\n\r\n<script>\r\nimport { bus } from \"@/main\";\r\nimport Cards from '@/components/UI/Cards.vue'\r\nimport GantTask from '@/components/visual/GantTask.vue'\r\nimport {axiosInstance} from '@/utils/api'\r\nimport { createNamespacedHelpers } from \"vuex\";\r\nimport uf from '@/utils/universal_functions'\r\nimport wtasp from '@/utils/wtasp' //Содержит функции для Project, Task, Work\r\nimport filelist from '@/components/carddetails/files/filelist.vue';\r\nimport informationorders from '../components/assignments/informationorders.vue';\r\nimport mMessegeListRight from '@/components/supogramm/mess_layouts/m-messege-list-right.vue';\r\nimport workPieChart from '@/components/UI/GRAPHICS/workPieChart.vue';\r\nimport WorkTaskAssProject from './pattern/work-task-ass-project.vue';\r\nimport LeftList from '@/components/carddetails/pattern/leftList.vue';\r\nconst assignmentstate = createNamespacedHelpers(\"assignmentstate\");\r\nconst projectstate = createNamespacedHelpers(\"projectstate\");\r\nconst taskstate = createNamespacedHelpers(\"taskstate\");\r\nconst workstate = createNamespacedHelpers(\"workstate\");\r\n\r\nexport default {\r\n\r\n    name:\"task\",\r\n\r\n    mixins:[uf, wtasp],\r\n\r\n    components:{\r\n        Cards,        \r\n        GantTask, \r\n        filelist,\r\n        informationorders,\r\n        mMessegeListRight,\r\n        workPieChart,\r\n        WorkTaskAssProject,\r\n        LeftList\r\n    },\r\n\r\n    data(){\r\n      return{\r\n        waiter:false,\r\n        activedCh: {},\r\n        gantview:false,\r\n        chatview:true,\r\n        project:{\r\n          name:\"\",\r\n          status:{id:0,name:\"\"},\r\n          task:{name:\"\",datestart:\"\",dateend:\"\", responsible:{id:\"\"}},\r\n          users:[{role: {id: 0}, user:{id: 0}}]\r\n        },\r\n        breadcrumbs:[{href:'',disabled:true,text:\"\"}],\r\n        task:{name:\"\",task_work:[],datestart:\"\",dateend:\"\",responsible:{id:\"\"},status:{id:0,name:\"\"},description:\"\"},\r\n        show:true,\r\n        level:2,\r\n        workaccepted:0,\r\n        executed: 0\r\n\r\n    }},\r\n\r\n    async mounted() {\r\n      this.ws = new this.$pws()\r\n      this.ws.start(this.$route.fullPath);\r\n      this.ws.addEvent('onmessage', (event) => {\r\n      const data = JSON.parse(event.data);\r\n      console.log(data, 'data');\r\n        if (\"action\" in data) {\r\n          try{\r\n            this[data.action](data.payload)\r\n          }\r\n          catch(e)\r\n          {\r\n            console.log(e)\r\n          }\r\n          }\r\n        else{console.log(data)} \r\n        })\r\n    },\r\n\r\n    computed:{\r\n      ...workstate.mapGetters(['getworks']),\r\n      ...taskstate.mapGetters(['gettasks']),\r\n      ...assignmentstate.mapGetters(['getAssignments']),\r\n      ...projectstate.mapGetters([\"getProject\",\"getprojectuniqueusers\"]),\r\n\r\n      task_statuses_calc(){\r\n          return this.pie_statuses_calc(this.task.task_work)\r\n      },\r\n\r\n      // projectPopoject(){\r\n        \r\n      //   // let {name: nameup, dateend: dateendup, datestart: datestartup, users: usersup}={...this.project}\r\n      //   // let {name, dateend, datestart, responsible, status, description, comment}={...this.task}\r\n      //   this.project.responsible = this.project.users.find(e=>e.role.id==2).user\r\n      //   console.log({...this.task,parent:this.project, type:'Проект:', role: 'Руководитель проекта:'},\"GHJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ\")\r\n      //   return {...this.task,parent:this.project, type:'Проект:', role: 'Руководитель проекта:'}\r\n      // },  \r\n\r\n    },\r\n\r\n    methods:{    \r\n      ...taskstate.mapMutations([\"settasks\"]),   \r\n      ...projectstate.mapMutations([\"setProject\", \"clearProject\"]),\r\n    renew(payload){\r\n            this.ws.stop()\r\n                console.log(\"aaaaad\")\r\n                this.ws.start(this.$route.fullPath);\r\n        \r\n        \r\n            \r\n        },\r\n      \r\n\r\n       changestatus(chang){   \r\n      let action = \"taskstatus\"  \r\n      let payload = {\r\n        id: chang.val.id,\r\n        status: chang.action,\r\n        comment: chang.comment,\r\n        h_action:chang.h_action\r\n      }\r\n      \r\n      // let check = this.getProject\r\n      \r\n       \r\n      // payload['project_status_update'] = check.status.id ==3?true:false\r\n      // payload['task_status_update']= this.task.status.id < 2 ?true:false\r\n      \r\n      // if (this.tab>0){\r\n        // payload['work_status_update']= this.work.status.id < 2 ? true:false \r\n        // action = \"assignmentstatus\"\r\n      // }\r\n        this.ws.send({action,payload})\r\n    },\r\n\r\n\r\n\r\n\r\n      changegantview(){\r\n        this.gantview=false\r\n      },\r\n\r\n        fileupdated(payload){            \r\n            let ind = this.task.task_files.findIndex(el=>el.id==payload.id)        \r\n             this.task.task_files[ind].visible=payload.visible.split(\"\")\r\n         \r\n         \r\n        },\r\n         newmessageincome(payload){               \r\n                this.activedCh.lastmessage.push(payload)\r\n                \r\n                this.$refs.mychat.scrollbottom(payload.id)\r\n            },\r\n\r\n      rout(val) {\r\n        this.$router.push({ path: `${this.$route.fullPath}/work/${val}` })\r\n      },\r\n       async uploadfile(formData){\r\n            let fileinfo = {project:this.getProject.id, task:this.task.id, visible: '0100'}\r\n           \r\n          //   // Тут же заделаем потом на другие уровни - задачи и проекты\r\n            formData.append('info', JSON.stringify(fileinfo))\r\n           \r\n            let res = await axiosInstance.post( `/main/uploader`, formData,{\r\n                                        headers: {\r\n                                            \"Content-Type\": \"multipart/form-data\",\r\n                                        },\r\n                            })\r\n            if (\"created\" in res.data){\r\n                this.ws.send({\"action\":\"fileuploaded\",\"payload\":this.task.id})\r\n            }\r\n\r\n       },\r\n         filerenew(payload){\r\n        \r\n            payload.forEach((el,index)=> payload[index].visible = el.visible.split(\"\") )\r\n            this.task.task_files = payload\r\n\r\n         },\r\n\r\n    \r\n      build(data){\r\n        console.log(\"BUILD\" ,data);\r\n        data.task.task_files.forEach((el,index)=> data.task.task_files[index].visible =el.visible.split(\"\") )\r\n        \r\n        this.project = data.project\r\n        this.task = data.task\r\n        console.log('this.project',this.project);\r\n        console.log('this.task',this.task);\r\n\r\n        this.setProject(this.project)\r\n         this.breadcrumbs=[\r\n                          { text: this.getProject.name, disabled: false, href: `/project/${this.getProject.id}` },                               \r\n                        ]\r\n        let wc = 0\r\n        this.executed = data.task.task_work.filter(el=>el.status.id==5).length\r\n        console.log(this.executed, 'this.executed');\r\n        data.task.task_work.forEach(el=> {if(el.status.id==5) wc+=1} )\r\n        this.workaccepted=wc/data.task.task_work.length*100        \r\n        this.settasks(data.task)\r\n\r\n        if(\"datachat\" in data){\r\n          this.activedCh = data.datachat\r\n          this.chatview = \"id\" in this.activedCh\r\n          this.$refs.mychat.scrollbottom(this.activedCh.lastmessage[this.activedCh.lastmessage.length-1].id)\r\n        }\r\n\r\n       \r\n      },\r\n\r\n\r\n\r\n               messagedeleted(payload){\r\n                try{\r\n               \r\n                // console.log(this.mychats[ind].lastmessage)\r\n                let ind2=this.activedCh.lastmessage.findIndex(e=>e.id==payload.id)\r\n                this.activedCh.lastmessage.splice(ind2,1)\r\n                console.log(this.activedCh.lastmessage, \"slice\");}\r\n                catch{\r\n               \r\n                }\r\n                \r\n                } ,\r\n\r\n takeprev(payload){\r\n               \r\n                // let ind = this.mychats.findIndex(el=>el.id==payload.chat)   \r\n                \r\n                if  (this.activedCh.lastmessage.length<20){\r\n                    this.activedCh.lastmessage=payload.res\r\n                    this.activedCh.lastmessage=this.activedCh.lastmessage\r\n                }\r\n                else{\r\n                this.activedCh.lastmessage = payload.res.concat(this.activedCh.lastmessage)\r\n                 }\r\n            \r\n\r\n                this.waiter=false\r\n\r\n\r\n    },\r\n      afterEnter(){\r\n        console.log(\"@after-enter=\")\r\n      },\r\n\r\n      afterLeave(){   \r\n        console.log(`afterLeave`);     \r\n        this.tab=this.nedotab\r\n        this.currentid = this.tab==0?this.work.id:this.work.work_assignment[this.tab-1].id\r\n        this.activeChat()\r\n        this.show=true\r\n      },\r\n                \r\n      VisSwitcher(file){     \r\n        console.log(\"VisSwitcher\", file)\r\n        this.ws.send({\"action\":\"updateFile\",\"payload\":{id:file.id,visible: file.visible.join(\"\")}})\r\n      },\r\n\r\n      rebuild(){\r\n        this.ws.send({\"action\":\"rebuild\",\"payload\": this.task.id})\r\n      },\r\n      filedeleted(payload){     \r\n        console.log(\"pl\");\r\n        let ind = this.task.task_files.findIndex(el=>el.id==payload.id)\r\n       this.task.task_files.splice(ind,1)\r\n      },\r\n      chatviewer(){\r\n        this.chatview=!this.chatview\r\n      },\r\n        \r\n      createtabchat(){\r\n        let name = this.task.name\r\n        let level = 2\r\n        let parent = this.task.id\r\n        let users = new Set()\r\n        this.task.task_work.forEach(e=> users.add(e.responsible.id))\r\n        users.add(this.task.responsible.id)\r\n        bus.$emit(\"supogrammchatcreate\",{users:Array.from(users),name, level,parent})   \r\n      },\r\n\r\n      async uploadfile(formData){\r\n        let fileinfo = {project:this.getProject.id, task:this.task.id, visible: '0100'}\r\n        // Тут же заделаем потом на другие уровни - задачи и проекты\r\n        formData.append('info', JSON.stringify(fileinfo))\r\n        let res = await axiosInstance.post( `/main/uploader`, formData,{\r\n          headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n          if (\"created\" in res.data){\r\n            this.ws.send({\"action\":\"fileuploaded\",\"payload\":this.task.id})\r\n          }\r\n      },\r\n\r\n        createnewWork(){\r\n          this.$refs.ganttask.createnewTask()\r\n        },\r\n\r\n        gantviewer(){\r\n          this.gantview=!this.gantview\r\n          if (this.gantview) this.$refs.ganttask.rebuild()\r\n        },\r\n      \r\n        addTask(val){          \r\n            console.log(val);\r\n            delete val.val.history\r\n            this.ws.send({\"action\":val.am.method,\"payload\":val.val})\r\n        },\r\n\r\n        confirmation(payload){\r\n          this.task.task_work.forEach(el=> {\r\n            el.menu=false \r\n            el.action_confirm=false\r\n          })\r\n          payload['task_status_update'] = this.task.task_work.every(el=>{\r\n            if(el.id==payload.id && payload.status==5){return true}\r\n            else if(el.status.id==5){return true}\r\n            return false\r\n          })?\r\n          {\"res\":true}:{'res':false}\r\n          this.ws.send({\"action\":\"confirmation\",\"payload\":payload})\r\n        },\r\n\r\n\r\n\r\n\r\n        },\r\n            beforeDestroy() {\r\n      this.clearProject()\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n.v-window, .v-window__container {\r\n  display: flex;\r\n  flex-grow: 1;\r\n  flex-direction: column;\r\n}\r\n\r\n.theme--light .v-tabs-items {\r\n  background-color: transparent;\r\n}\r\n\r\n.v-window-item {\r\n  display: flex;\r\n  flex-grow: 1;\r\n  flex-direction: column;\r\n}\r\n\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Task.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Task.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Task.vue?vue&type=template&id=78b6f00d&\"\nimport script from \"./Task.vue?vue&type=script&lang=js&\"\nexport * from \"./Task.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Task.vue?vue&type=style&index=0&id=78b6f00d&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSlideXReverseTransition } from 'vuetify/lib/components/transitions';\ninstallComponents(component, {VCard,VCol,VDivider,VRow,VSlideXReverseTransition})\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","$options","name","chatview","show","gettasks","breadcrumbs","on","afterLeave","afterEnter","createnewWork","allCard","scopedSlots","_u","key","fn","confirmation","rout","staticClass","gantviewer","directives","rawName","value","expression","ref","addTask","changegantview","proxy","activedCh","chatviewer","createtabchat","changestatus","Object","keys","length","waiter","$event","task","task_files","status","id","uploadfile","deletefile","VisSwitcher","task_statuses_calc","staticRenderFns","ganttRef","startDateRange","endDateRange","scale","onCustomCommandClick","onContextMenuPreparing","onTaskDblClick","taskk","data","_v","_s","title","start","toLocaleDateString","end","item","class","getTaskColor","taskData","style","width","taskSize","taskResources","text","contextMenuItems","stopPropagation","$emit","createnewTask","apply","arguments","tasks","resources","resourceAssignments","model","callback","$$v","dialog","actionmethod","dialoginfo","changeddialog","saveit","deldialog","projectstate","taskstate","workstate","assignmentstate","globalstore","component","VBtn","VCard"],"sourceRoot":""}